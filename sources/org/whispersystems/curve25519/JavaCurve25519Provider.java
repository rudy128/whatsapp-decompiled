package org.whispersystems.curve25519;

import X.AnonymousClass000;
import X.BE6;
import X.BE8;
import X.BEA;
import X.BEB;
import X.C22562BCv;
import X.C24649CDo;
import X.C24650CDp;
import X.C24651CDq;
import X.C24652CDr;
import X.C24653CDs;
import X.C24654CDt;
import X.C24656CDv;
import X.C24657CDx;
import X.C24659CDz;
import X.C24688CGa;
import X.C24689CGb;
import X.C24942CQs;
import X.C25036CUp;
import X.C25362CeN;
import X.C25363CeO;
import X.C25947CpF;
import X.C56312hG;
import X.CDw;
import X.CE0;
import X.CE1;
import X.CE2;
import X.CGY;
import X.CGZ;
import X.CS1;
import X.CS2;

public class JavaCurve25519Provider implements C22562BCv {
    public C56312hG A00;
    public final C25036CUp A01;

    public static void A05(C25947CpF cpF, byte b, int i) {
        C25947CpF[][] cpFArr;
        if (i <= 7) {
            cpFArr = CGY.A00;
        } else if (i <= 15) {
            cpFArr = C24689CGb.A00;
        } else if (i <= 23) {
            cpFArr = CGZ.A00;
        } else {
            cpFArr = C24688CGa.A00;
        }
        C25947CpF cpF2 = new C25947CpF();
        int i2 = (int) (((long) b) >>> 63);
        int[] iArr = cpF.A02;
        iArr[0] = 1;
        BEB.A1V(iArr);
        int[] iArr2 = cpF.A01;
        iArr2[0] = 1;
        BEB.A1V(iArr2);
        int[] iArr3 = cpF.A00;
        iArr3[0] = 0;
        BEB.A1V(iArr3);
        C25947CpF[] cpFArr2 = cpFArr[i];
        byte b2 = (byte) (b - (((-i2) & b) << 1));
        A06(cpF, cpFArr2[0], ((b2 ^ 1) - 1) >>> 31);
        A06(cpF, cpFArr2[1], ((b2 ^ 2) - 1) >>> 31);
        A06(cpF, cpFArr2[2], ((b2 ^ 3) - 1) >>> 31);
        A06(cpF, cpFArr2[3], ((b2 ^ 4) - 1) >>> 31);
        A06(cpF, cpFArr2[4], ((b2 ^ 5) - 1) >>> 31);
        A06(cpF, cpFArr2[5], ((b2 ^ 6) - 1) >>> 31);
        A06(cpF, cpFArr2[6], ((b2 ^ 7) - 1) >>> 31);
        A06(cpF, cpFArr2[7], ((b2 ^ 8) - 1) >>> 31);
        C24650CDp.A00(cpF2.A02, iArr2);
        C24650CDp.A00(cpF2.A01, iArr);
        C24654CDt.A00(cpF2.A00, iArr3);
        A06(cpF, cpF2, i2);
    }

    /* JADX WARNING: type inference failed for: r1v0, types: [X.CUp, java.lang.Object] */
    /* JADX WARNING: type inference failed for: r0v0, types: [X.2hG, java.lang.Object] */
    public JavaCurve25519Provider() {
        ? obj = new Object();
        ? obj2 = new Object();
        this.A01 = obj;
        this.A00 = obj2;
    }

    public static void A02(CS1 cs1, C24942CQs cQs) {
        int[] iArr = cQs.A00;
        int[] iArr2 = cs1.A01;
        int[] iArr3 = cs1.A00;
        C24653CDs.A00(iArr, iArr2, iArr3);
        int[] iArr4 = cQs.A01;
        int[] iArr5 = cs1.A02;
        int[] iArr6 = cs1.A03;
        C24653CDs.A00(iArr4, iArr5, iArr6);
        C24653CDs.A00(cQs.A02, iArr6, iArr3);
    }

    public static void A03(CS2 cs2, byte[] bArr) {
        int[] iArr = new int[10];
        int[] iArr2 = new int[10];
        int[] iArr3 = new int[10];
        C24652CDr.A00(iArr, cs2.A03);
        C24653CDs.A00(iArr2, cs2.A01, iArr);
        C24653CDs.A00(iArr3, cs2.A02, iArr);
        C24657CDx.A00(bArr, iArr3);
        byte b = bArr[31];
        byte[] bArr2 = new byte[32];
        C24657CDx.A00(bArr2, iArr2);
        BE6.A1O(bArr, b, (bArr2[0] & 1) << 7, 31);
    }

    public static void A04(CS2 cs2, byte[] bArr) {
        int i;
        byte[] bArr2 = new byte[64];
        CS1 cs1 = new CS1();
        C24942CQs cQs = new C24942CQs();
        C25947CpF cpF = new C25947CpF();
        int i2 = 0;
        int i3 = 0;
        do {
            int i4 = i3 * 2;
            bArr2[i4] = (byte) ((bArr[i3] >>> 0) & 15);
            i3 = BE6.A0A((bArr[i3] >>> 4) & 15, bArr2, i4 + 1, i3);
            i = 1;
        } while (i3 < 32);
        int i5 = 0;
        byte b = 0;
        do {
            byte b2 = (byte) (bArr2[i5] + b);
            bArr2[i5] = b2;
            b = (byte) (((byte) (b2 + 8)) >> 4);
            bArr2[i5] = (byte) (b2 - (b << 4));
            i5++;
        } while (i5 < 63);
        bArr2[63] = (byte) (bArr2[63] + b);
        int[] iArr = cs2.A01;
        iArr[0] = 0;
        BEB.A1V(iArr);
        int[] iArr2 = cs2.A02;
        iArr2[0] = 1;
        BEB.A1V(iArr2);
        int[] iArr3 = cs2.A03;
        iArr3[0] = 1;
        BEB.A1V(iArr3);
        int[] iArr4 = cs2.A00;
        iArr4[0] = 0;
        BEB.A1V(iArr4);
        do {
            A05(cpF, bArr2[i], i / 2);
            C24659CDz.A00(cs1, cs2, cpF);
            CE0.A00(cs1, cs2);
            i += 2;
        } while (i < 64);
        CE2.A00(cs1, cs2);
        A02(cs1, cQs);
        CE1.A00(cs1, cQs);
        A02(cs1, cQs);
        CE1.A00(cs1, cQs);
        A02(cs1, cQs);
        CE1.A00(cs1, cQs);
        CE0.A00(cs1, cs2);
        do {
            A05(cpF, bArr2[i2], i2 / 2);
            C24659CDz.A00(cs1, cs2, cpF);
            CE0.A00(cs1, cs2);
            i2 += 2;
        } while (i2 < 64);
    }

    public static void A06(C25947CpF cpF, C25947CpF cpF2, int i) {
        A07(cpF.A02, cpF2.A02, i);
        A07(cpF.A01, cpF2.A01, i);
        A07(cpF.A00, cpF2.A00, i);
    }

    public static void A07(int[] iArr, int[] iArr2, int i) {
        int i2 = iArr[0];
        int i3 = iArr[1];
        int i4 = iArr[2];
        int i5 = iArr[3];
        int i6 = iArr[4];
        int i7 = iArr[5];
        int i8 = iArr[6];
        int i9 = iArr[7];
        int i10 = iArr[8];
        int i11 = iArr[9];
        int i12 = iArr2[0];
        int i13 = iArr2[1];
        int i14 = iArr2[2];
        int i15 = iArr2[3];
        int i16 = iArr2[4];
        int i17 = iArr2[5];
        int i18 = iArr2[6];
        int i19 = iArr2[7];
        int i20 = i2 ^ i12;
        int i21 = i3 ^ i13;
        int i22 = i4 ^ i14;
        int i23 = i5 ^ i15;
        int i24 = i6 ^ i16;
        int i25 = i7 ^ i17;
        int i26 = i8 ^ i18;
        int i27 = i9 ^ i19;
        int i28 = i10 ^ iArr2[8];
        int i29 = i11 ^ iArr2[9];
        int i30 = -i;
        iArr[0] = i2 ^ (i20 & i30);
        iArr[1] = i3 ^ (i21 & i30);
        iArr[2] = i4 ^ (i22 & i30);
        iArr[3] = i5 ^ (i23 & i30);
        iArr[4] = i6 ^ (i24 & i30);
        iArr[5] = i7 ^ (i25 & i30);
        iArr[6] = i8 ^ (i26 & i30);
        iArr[7] = i9 ^ (i27 & i30);
        iArr[8] = i10 ^ (i28 & i30);
        iArr[9] = i11 ^ (i29 & i30);
    }

    public static void A08(int[] iArr, int[] iArr2, int i) {
        int i2 = iArr[0];
        int i3 = iArr[1];
        int i4 = iArr[2];
        int i5 = iArr[3];
        int i6 = iArr[4];
        int i7 = iArr[5];
        int i8 = iArr[6];
        int i9 = iArr[7];
        int i10 = iArr[8];
        int i11 = iArr[9];
        int i12 = iArr2[0];
        int i13 = iArr2[1];
        int i14 = iArr2[2];
        int i15 = iArr2[3];
        int i16 = iArr2[4];
        int i17 = iArr2[5];
        int i18 = iArr2[6];
        int i19 = iArr2[7];
        int i20 = iArr2[8];
        int i21 = iArr2[9];
        int i22 = -i;
        int i23 = (i2 ^ i12) & i22;
        int i24 = (i3 ^ i13) & i22;
        int i25 = (i4 ^ i14) & i22;
        int i26 = (i5 ^ i15) & i22;
        int i27 = (i6 ^ i16) & i22;
        int i28 = (i7 ^ i17) & i22;
        int i29 = (i8 ^ i18) & i22;
        int i30 = (i9 ^ i19) & i22;
        int i31 = (i10 ^ i20) & i22;
        int i32 = (i11 ^ i21) & i22;
        iArr[0] = i2 ^ i23;
        iArr[1] = i3 ^ i24;
        iArr[2] = i4 ^ i25;
        iArr[3] = i5 ^ i26;
        iArr[4] = i6 ^ i27;
        iArr[5] = i7 ^ i28;
        iArr[6] = i8 ^ i29;
        iArr[7] = i9 ^ i30;
        iArr[8] = i10 ^ i31;
        iArr[9] = i11 ^ i32;
        iArr2[0] = i12 ^ i23;
        iArr2[1] = i13 ^ i24;
        iArr2[2] = i14 ^ i25;
        iArr2[3] = i15 ^ i26;
        iArr2[4] = i16 ^ i27;
        iArr2[5] = i17 ^ i28;
        iArr2[6] = i18 ^ i29;
        iArr2[7] = i19 ^ i30;
        iArr2[8] = i20 ^ i31;
        iArr2[9] = i21 ^ i32;
    }

    public byte[] BLs() {
        byte[] bArr = new byte[32];
        this.A00.A00(bArr);
        byte[] bArr2 = new byte[32];
        System.arraycopy(bArr, 0, bArr2, 0, 32);
        bArr2[0] = (byte) (bArr2[0] & 248);
        byte b = (byte) (bArr2[31] & Byte.MAX_VALUE);
        bArr2[31] = b;
        bArr2[31] = (byte) (b | 64);
        return bArr2;
    }

    public byte[] BXp() {
        byte[] bArr = new byte[64];
        this.A00.A00(bArr);
        return bArr;
    }

    public byte[] calculateAgreement(byte[] bArr, byte[] bArr2) {
        int i;
        byte[] bArr3 = new byte[32];
        byte[] bArr4 = new byte[32];
        int[] iArr = new int[10];
        int[] iArr2 = new int[10];
        int[] iArr3 = new int[10];
        int[] iArr4 = new int[10];
        int[] iArr5 = new int[10];
        int[] iArr6 = new int[10];
        int[] iArr7 = new int[10];
        int i2 = 0;
        do {
            bArr4[i2] = bArr[i2];
            i2++;
        } while (i2 < 32);
        int[] iArr8 = iArr;
        C24651CDq.A00(bArr2, iArr8);
        iArr2[0] = 1;
        BEB.A1V(iArr2);
        iArr3[0] = 0;
        BEB.A1V(iArr3);
        C24650CDp.A00(iArr4, iArr8);
        iArr5[0] = 1;
        BEB.A1V(iArr5);
        int i3 = 254;
        int i4 = 0;
        do {
            i = (bArr4[i3 / 8] >>> (i3 & 7)) & 1;
            int i5 = i4 ^ i;
            int[] iArr9 = iArr4;
            A08(iArr2, iArr9, i5);
            A08(iArr3, iArr5, i5);
            CDw.A00(iArr6, iArr9, iArr5);
            int[] iArr10 = iArr2;
            CDw.A00(iArr7, iArr10, iArr3);
            C24649CDo.A00(iArr10, iArr10, iArr3);
            C24649CDo.A00(iArr3, iArr4, iArr5);
            int[] iArr11 = iArr6;
            C24653CDs.A00(iArr5, iArr11, iArr2);
            C24653CDs.A00(iArr3, iArr3, iArr7);
            C24656CDv.A00(iArr11, iArr7);
            C24656CDv.A00(iArr7, iArr2);
            C24649CDo.A00(iArr4, iArr5, iArr3);
            CDw.A00(iArr3, iArr5, iArr3);
            int[] iArr12 = iArr6;
            C24653CDs.A00(iArr2, iArr7, iArr12);
            CDw.A00(iArr7, iArr7, iArr12);
            C24656CDv.A00(iArr3, iArr3);
            int i6 = iArr7[0];
            int i7 = iArr7[1];
            int i8 = iArr7[2];
            int i9 = iArr7[3];
            int i10 = iArr7[4];
            int i11 = iArr7[5];
            int i12 = iArr7[6];
            int i13 = iArr7[7];
            int i14 = iArr7[8];
            long j = ((long) i7) * 121666;
            long j2 = ((long) i8) * 121666;
            long j3 = ((long) i9) * 121666;
            long j4 = ((long) i11) * 121666;
            long j5 = ((long) i13) * 121666;
            long j6 = ((long) iArr7[9]) * 121666;
            long j7 = (j6 + 16777216) >> 25;
            long j8 = (((long) i6) * 121666) + (19 * j7);
            long j9 = (j + 16777216) >> 25;
            long j10 = j2 + j9;
            long j11 = j - (j9 << 25);
            long j12 = (j3 + 16777216) >> 25;
            long j13 = (((long) i10) * 121666) + j12;
            long j14 = j3 - (j12 << 25);
            long j15 = (j4 + 16777216) >> 25;
            long j16 = (((long) i12) * 121666) + j15;
            long j17 = j4 - (j15 << 25);
            long j18 = (16777216 + j5) >> 25;
            long j19 = (((long) i14) * 121666) + j18;
            long j20 = (j8 + 33554432) >> 26;
            long j21 = j11 + j20;
            long j22 = j8 - (j20 << 26);
            long j23 = (j10 + 33554432) >> 26;
            long j24 = j14 + j23;
            long j25 = j10 - (j23 << 26);
            long j26 = (j13 + 33554432) >> 26;
            long j27 = j17 + j26;
            long j28 = j13 - (j26 << 26);
            long j29 = (j16 + 33554432) >> 26;
            long j30 = (j5 - (j18 << 25)) + j29;
            long j31 = j16 - (j29 << 26);
            long j32 = (j19 + 33554432) >> 26;
            iArr5[0] = (int) j22;
            iArr5[1] = (int) j21;
            iArr5[2] = (int) j25;
            iArr5[3] = (int) j24;
            iArr5[4] = (int) j28;
            iArr5[5] = (int) j27;
            iArr5[6] = (int) j31;
            iArr5[7] = (int) j30;
            iArr5[8] = (int) (j19 - (j32 << 26));
            iArr5[9] = (int) ((j6 - (j7 << 25)) + j32);
            int[] iArr13 = iArr4;
            C24656CDv.A00(iArr13, iArr13);
            int[] iArr14 = iArr6;
            C24649CDo.A00(iArr14, iArr14, iArr5);
            C24653CDs.A00(iArr5, iArr, iArr3);
            C24653CDs.A00(iArr3, iArr7, iArr14);
            i3--;
            i4 = i;
        } while (i3 >= 0);
        int[] iArr15 = iArr2;
        int i15 = i;
        A08(iArr15, iArr4, i15);
        A08(iArr3, iArr5, i15);
        C24652CDr.A00(iArr3, iArr3);
        C24653CDs.A00(iArr15, iArr15, iArr3);
        C24657CDx.A00(bArr3, iArr15);
        return bArr3;
    }

    public byte[] generatePublicKey(byte[] bArr) {
        byte[] bArr2 = new byte[32];
        CS2 cs2 = new CS2();
        int[] iArr = new int[10];
        int[] iArr2 = new int[10];
        int[] iArr3 = new int[10];
        int[] iArr4 = new int[10];
        A04(cs2, bArr);
        int[] iArr5 = cs2.A02;
        int[] iArr6 = cs2.A03;
        C24649CDo.A00(iArr, iArr5, iArr6);
        CDw.A00(iArr2, iArr6, iArr5);
        C24652CDr.A00(iArr3, iArr2);
        C24653CDs.A00(iArr4, iArr, iArr3);
        C24657CDx.A00(bArr2, iArr4);
        return bArr2;
    }

    public boolean verifySignature(byte[] bArr, byte[] bArr2, byte[] bArr3) {
        C25036CUp cUp = this.A01;
        byte[] bArr4 = bArr2;
        int length = bArr4.length;
        int[] iArr = new int[10];
        int[] iArr2 = new int[10];
        int[] iArr3 = new int[10];
        int[] iArr4 = new int[10];
        int[] iArr5 = new int[10];
        int[] iArr6 = new int[10];
        byte[] bArr5 = new byte[32];
        int i = length + 64;
        byte[] bArr6 = new byte[i];
        C24651CDq.A00(bArr, iArr);
        iArr5[0] = 1;
        BEB.A1V(iArr5);
        CDw.A00(iArr2, iArr, iArr5);
        C24649CDo.A00(iArr3, iArr, iArr5);
        C24652CDr.A00(iArr4, iArr3);
        C24653CDs.A00(iArr6, iArr2, iArr4);
        C24657CDx.A00(bArr5, iArr6);
        byte b = (byte) (bArr5[31] & Byte.MAX_VALUE);
        bArr5[31] = b;
        BE6.A1N(bArr5, b, bArr3[63] & 128, 31);
        System.arraycopy(bArr3, 0, bArr6, 0, 64);
        bArr6[63] = (byte) (bArr6[63] & Byte.MAX_VALUE);
        System.arraycopy(bArr4, 0, bArr6, 64, length);
        return AnonymousClass000.A1P(C25362CeN.A00(cUp, new byte[i], bArr6, bArr5, (long) i));
    }

    public static long A00(byte[] bArr, int i) {
        return BEA.A0J(bArr, i) | BEB.A0F(bArr, i);
    }

    public static long A01(byte[] bArr, int i) {
        return ((((long) bArr[i + 3]) << 24) & 4278190080L) | BEB.A0F(bArr, i) | BEA.A0J(bArr, i);
    }

    public byte[] calculateSignature(byte[] bArr, byte[] bArr2, byte[] bArr3) {
        byte[] bArr4 = new byte[64];
        C25036CUp cUp = this.A01;
        byte[] bArr5 = bArr3;
        int length = bArr5.length;
        CS2 cs2 = new CS2();
        byte[] bArr6 = new byte[32];
        byte[] bArr7 = new byte[(length + 128)];
        byte[] bArr8 = bArr2;
        A04(cs2, bArr8);
        A03(cs2, bArr6);
        byte b = (byte) (bArr6[31] & 128);
        long j = (long) length;
        byte[] bArr9 = new byte[64];
        byte[] bArr10 = new byte[64];
        CS2 cs22 = new CS2();
        byte[] bArr11 = bArr7;
        System.arraycopy(bArr5, 0, bArr11, 64, (int) j);
        System.arraycopy(bArr8, 0, bArr11, 32, 32);
        bArr7[0] = -2;
        int i = 1;
        do {
            bArr7[i] = -1;
            i++;
        } while (i < 32);
        long j2 = j + 64;
        byte[] bArr12 = bArr7;
        System.arraycopy(bArr, 0, bArr12, (int) j2, 64);
        cUp.A00(bArr9, bArr12, 128 + j);
        System.arraycopy(bArr6, 0, bArr12, 32, 32);
        C25363CeO.A01(bArr9);
        A04(cs22, bArr9);
        A03(cs22, bArr12);
        cUp.A00(bArr10, bArr12, j2);
        C25363CeO.A01(bArr10);
        byte[] bArr13 = new byte[32];
        long A002 = A00(bArr10, 0) & 2097151;
        long A012 = (A01(bArr10, 2) >>> 5) & 2097151;
        long A0G = BE8.A0G(bArr10, 5, 2);
        long A013 = (A01(bArr10, 7) >>> 7) & 2097151;
        long A014 = (A01(bArr10, 10) >>> 4) & 2097151;
        long A003 = (A00(bArr10, 13) >>> 1) & 2097151;
        long A015 = (A01(bArr10, 15) >>> 6) & 2097151;
        long A004 = (A00(bArr10, 18) >>> 3) & 2097151;
        long A005 = A00(bArr10, 21) & 2097151;
        long A0H = BE8.A0H(bArr10, 23, 5);
        long A0G2 = BE8.A0G(bArr10, 26, 2);
        long A016 = A01(bArr10, 28) >>> 7;
        long A006 = A00(bArr8, 0) & 2097151;
        long A0H2 = BE8.A0H(bArr8, 2, 5);
        long A0G3 = BE8.A0G(bArr8, 5, 2);
        long A017 = (A01(bArr8, 7) >>> 7) & 2097151;
        long A0H3 = BE8.A0H(bArr8, 10, 4);
        long A0G4 = BE8.A0G(bArr8, 13, 1);
        long A0H4 = BE8.A0H(bArr8, 15, 6);
        long A0G5 = BE8.A0G(bArr8, 18, 3);
        long A007 = A00(bArr8, 21) & 2097151;
        long A0H5 = BE8.A0H(bArr8, 23, 5);
        long A0G6 = BE8.A0G(bArr8, 26, 2);
        long A018 = A01(bArr8, 28) >>> 7;
        long A0H6 = BE8.A0H(bArr9, 2, 5);
        long A0G7 = BE8.A0G(bArr9, 5, 2);
        long A0H7 = BE8.A0H(bArr9, 10, 4);
        long A0G8 = BE8.A0G(bArr9, 13, 1);
        long A0H8 = BE8.A0H(bArr9, 15, 6);
        long A0G9 = BE8.A0G(bArr9, 18, 3);
        long A0H9 = BE8.A0H(bArr9, 23, 5);
        long A0G10 = BE8.A0G(bArr9, 26, 2);
        long A008 = (A00(bArr9, 0) & 2097151) + (A002 * A006);
        long j3 = A0H6 + (A002 * A0H2) + (A012 * A006);
        long j4 = A0G7 + (A002 * A0G3) + (A012 * A0H2) + (A0G * A006);
        long A019 = ((A01(bArr9, 7) >>> 7) & 2097151) + (A002 * A017) + (A012 * A0G3) + (A0G * A0H2) + (A013 * A006);
        long j5 = A0H7 + (A002 * A0H3) + (A012 * A017) + (A0G * A0G3) + (A013 * A0H2) + (A014 * A006);
        long j6 = A0G8 + (A002 * A0G4) + (A012 * A0H3) + (A0G * A017) + (A013 * A0G3) + (A014 * A0H2) + (A003 * A006);
        long j7 = A0H8 + (A002 * A0H4) + (A012 * A0G4) + (A0G * A0H3) + (A013 * A017) + (A014 * A0G3) + (A003 * A0H2) + (A015 * A006);
        long j8 = A0G9 + (A002 * A0G5) + (A012 * A0H4) + (A0G * A0G4) + (A013 * A0H3) + (A014 * A017) + (A003 * A0G3) + (A015 * A0H2) + (A004 * A006);
        long A009 = (A00(bArr9, 21) & 2097151) + (A002 * A007) + (A012 * A0G5) + (A0G * A0H4) + (A013 * A0G4) + (A014 * A0H3) + (A003 * A017) + (A015 * A0G3) + (A004 * A0H2) + (A005 * A006);
        long j9 = A0H9 + (A002 * A0H5) + (A012 * A007) + (A0G * A0G5) + (A013 * A0H4) + (A014 * A0G4) + (A003 * A0H3) + (A015 * A017) + (A004 * A0G3) + (A005 * A0H2) + (A0H * A006);
        long j10 = A0G10 + (A002 * A0G6) + (A012 * A0H5) + (A0G * A007) + (A013 * A0G5) + (A014 * A0H4) + (A003 * A0G4) + (A015 * A0H3) + (A004 * A017) + (A005 * A0G3) + (A0H * A0H2) + (A0G2 * A006);
        long j11 = (A012 * A018) + (A0G * A0G6) + (A013 * A0H5) + (A014 * A007) + (A003 * A0G5) + (A015 * A0H4) + (A004 * A0G4) + (A005 * A0H3) + (A0H * A017) + (A0G2 * A0G3) + (A0H2 * A016);
        long j12 = (A013 * A018) + (A014 * A0G6) + (A003 * A0H5) + (A015 * A007) + (A004 * A0G5) + (A005 * A0H4) + (A0H * A0G4) + (A0G2 * A0H3) + (A017 * A016);
        long j13 = (A003 * A018) + (A015 * A0G6) + (A004 * A0H5) + (A005 * A007) + (A0H * A0G5) + (A0G2 * A0H4) + (A0G4 * A016);
        long j14 = (A004 * A018) + (A005 * A0G6) + (A0H * A0H5) + (A0G2 * A007) + (A0G5 * A016);
        long j15 = (A0H * A018) + (A0G2 * A0G6) + (A0H5 * A016);
        long j16 = A016 * A018;
        long j17 = (A008 + 1048576) >> 21;
        long j18 = j3 + j17;
        long j19 = A008 - (j17 << 21);
        long j20 = (j4 + 1048576) >> 21;
        long j21 = A019 + j20;
        long j22 = j4 - (j20 << 21);
        long j23 = (j5 + 1048576) >> 21;
        long j24 = j6 + j23;
        long j25 = j5 - (j23 << 21);
        long j26 = (j7 + 1048576) >> 21;
        long j27 = j8 + j26;
        long j28 = j7 - (j26 << 21);
        long j29 = (A009 + 1048576) >> 21;
        long j30 = j9 + j29;
        long j31 = A009 - (j29 << 21);
        long j32 = (j10 + 1048576) >> 21;
        long A0110 = (A01(bArr9, 28) >>> 7) + (A002 * A018) + (A012 * A0G6) + (A0G * A0H5) + (A013 * A007) + (A014 * A0G5) + (A003 * A0H4) + (A015 * A0G4) + (A004 * A0H3) + (A005 * A017) + (A0H * A0G3) + (A0G2 * A0H2) + (A006 * A016) + j32;
        long j33 = j10 - (j32 << 21);
        long j34 = (j11 + 1048576) >> 21;
        long j35 = (A0G * A018) + (A013 * A0G6) + (A014 * A0H5) + (A003 * A007) + (A015 * A0G5) + (A004 * A0H4) + (A005 * A0G4) + (A0H * A0H3) + (A0G2 * A017) + (A0G3 * A016) + j34;
        long j36 = j11 - (j34 << 21);
        long j37 = (j12 + 1048576) >> 21;
        long j38 = (A014 * A018) + (A003 * A0G6) + (A015 * A0H5) + (A004 * A007) + (A005 * A0G5) + (A0H * A0H4) + (A0G2 * A0G4) + (A0H3 * A016) + j37;
        long j39 = j12 - (j37 << 21);
        long j40 = (j13 + 1048576) >> 21;
        long j41 = (A015 * A018) + (A004 * A0G6) + (A005 * A0H5) + (A0H * A007) + (A0G2 * A0G5) + (A0H4 * A016) + j40;
        long j42 = j13 - (j40 << 21);
        long j43 = (j14 + 1048576) >> 21;
        long j44 = (A005 * A018) + (A0H * A0G6) + (A0G2 * A0H5) + (A007 * A016) + j43;
        long j45 = j14 - (j43 << 21);
        long j46 = (j15 + 1048576) >> 21;
        long j47 = (A0G2 * A018) + (A0G6 * A016) + j46;
        long j48 = j15 - (j46 << 21);
        long j49 = (j16 + 1048576) >> 21;
        long j50 = (j18 + 1048576) >> 21;
        long j51 = j22 + j50;
        long j52 = j18 - (j50 << 21);
        long j53 = (j21 + 1048576) >> 21;
        long j54 = j25 + j53;
        long j55 = j21 - (j53 << 21);
        long j56 = (j24 + 1048576) >> 21;
        long j57 = j28 + j56;
        long j58 = j24 - (j56 << 21);
        long j59 = (j27 + 1048576) >> 21;
        long j60 = j31 + j59;
        long j61 = j27 - (j59 << 21);
        long j62 = (j30 + 1048576) >> 21;
        long j63 = j33 + j62;
        long j64 = j30 - (j62 << 21);
        long j65 = (A0110 + 1048576) >> 21;
        long j66 = j36 + j65;
        long j67 = A0110 - (j65 << 21);
        long j68 = (j35 + 1048576) >> 21;
        long j69 = j39 + j68;
        long j70 = j35 - (j68 << 21);
        long j71 = (j38 + 1048576) >> 21;
        long j72 = j42 + j71;
        long j73 = j38 - (j71 << 21);
        long j74 = (j41 + 1048576) >> 21;
        long j75 = j45 + j74;
        long j76 = j41 - (j74 << 21);
        long j77 = (j44 + 1048576) >> 21;
        long j78 = j48 + j77;
        long j79 = j44 - (j77 << 21);
        long j80 = (j47 + 1048576) >> 21;
        long j81 = (j16 - (j49 << 21)) + j80;
        long j82 = j47 - (j80 << 21);
        long j83 = j72 - (j49 * 683901);
        long j84 = ((j69 - (j49 * 997805)) + (j81 * 136657)) - (j82 * 683901);
        long j85 = ((((j66 + (j49 * 470296)) + (j81 * 654183)) - (j82 * 997805)) + (j78 * 136657)) - (j79 * 683901);
        long j86 = j57 + (j75 * 666643);
        long j87 = j60 + (j78 * 666643) + (j79 * 470296) + (j75 * 654183);
        long j88 = ((((j63 + (j81 * 666643)) + (j82 * 470296)) + (j78 * 654183)) - (j79 * 997805)) + (j75 * 136657);
        long j89 = (j86 + 1048576) >> 21;
        long j90 = j61 + (j79 * 666643) + (j75 * 470296) + j89;
        long j91 = j86 - (j89 << 21);
        long j92 = (j87 + 1048576) >> 21;
        long j93 = ((((j64 + (j82 * 666643)) + (j78 * 470296)) + (j79 * 654183)) - (j75 * 997805)) + j92;
        long j94 = j87 - (j92 << 21);
        long j95 = (j88 + 1048576) >> 21;
        long j96 = ((((((j67 + (j49 * 666643)) + (j81 * 470296)) + (j82 * 654183)) - (j78 * 997805)) + (j79 * 136657)) - (j75 * 683901)) + j95;
        long j97 = j88 - (j95 << 21);
        long j98 = (j85 + 1048576) >> 21;
        long j99 = ((((j70 + (j49 * 654183)) - (j81 * 997805)) + (j82 * 136657)) - (j78 * 683901)) + j98;
        long j100 = j85 - (j98 << 21);
        long j101 = (j84 + 1048576) >> 21;
        long j102 = ((j73 + (j49 * 136657)) - (j81 * 683901)) + j101;
        long j103 = j84 - (j101 << 21);
        long j104 = (j83 + 1048576) >> 21;
        long j105 = j76 + j104;
        long j106 = j83 - (j104 << 21);
        long j107 = (j90 + 1048576) >> 21;
        long j108 = j94 + j107;
        long j109 = j90 - (j107 << 21);
        long j110 = (j93 + 1048576) >> 21;
        long j111 = j97 + j110;
        long j112 = j93 - (j110 << 21);
        long j113 = (j96 + 1048576) >> 21;
        long j114 = j100 + j113;
        long j115 = j96 - (j113 << 21);
        long j116 = (j99 + 1048576) >> 21;
        long j117 = j103 + j116;
        long j118 = j99 - (j116 << 21);
        long j119 = (j102 + 1048576) >> 21;
        long j120 = j106 + j119;
        long j121 = j102 - (j119 << 21);
        long j122 = j111 - (j105 * 683901);
        long j123 = ((j108 - (j105 * 997805)) + (j120 * 136657)) - (j121 * 683901);
        long j124 = ((((j91 + (j105 * 470296)) + (j120 * 654183)) - (j121 * 997805)) + (j117 * 136657)) - (j118 * 683901);
        long j125 = j19 + (j114 * 666643);
        long j126 = j51 + (j117 * 666643) + (j118 * 470296) + (j114 * 654183);
        long j127 = ((((j54 + (j120 * 666643)) + (j121 * 470296)) + (j117 * 654183)) - (j118 * 997805)) + (j114 * 136657);
        long j128 = (j125 + 1048576) >> 21;
        long j129 = j52 + (j118 * 666643) + (j114 * 470296) + j128;
        long j130 = j125 - (j128 << 21);
        long j131 = (j126 + 1048576) >> 21;
        long j132 = ((((j55 + (j121 * 666643)) + (j117 * 470296)) + (j118 * 654183)) - (j114 * 997805)) + j131;
        long j133 = j126 - (j131 << 21);
        long j134 = (j127 + 1048576) >> 21;
        long j135 = ((((((j58 + (j105 * 666643)) + (j120 * 470296)) + (j121 * 654183)) - (j117 * 997805)) + (j118 * 136657)) - (j114 * 683901)) + j134;
        long j136 = j127 - (j134 << 21);
        long j137 = (j124 + 1048576) >> 21;
        long j138 = ((((j109 + (j105 * 654183)) - (j120 * 997805)) + (j121 * 136657)) - (j117 * 683901)) + j137;
        long j139 = j124 - (j137 << 21);
        long j140 = (j123 + 1048576) >> 21;
        long j141 = ((j112 + (j105 * 136657)) - (j120 * 683901)) + j140;
        long j142 = j123 - (j140 << 21);
        long j143 = (j122 + 1048576) >> 21;
        long j144 = j115 + j143;
        long j145 = j122 - (j143 << 21);
        long j146 = (j129 + 1048576) >> 21;
        long j147 = j133 + j146;
        long j148 = j129 - (j146 << 21);
        long j149 = (j132 + 1048576) >> 21;
        long j150 = j136 + j149;
        long j151 = j132 - (j149 << 21);
        long j152 = (j135 + 1048576) >> 21;
        long j153 = j139 + j152;
        long j154 = j135 - (j152 << 21);
        long j155 = (j138 + 1048576) >> 21;
        long j156 = j142 + j155;
        long j157 = j138 - (j155 << 21);
        long j158 = (j141 + 1048576) >> 21;
        long j159 = j145 + j158;
        long j160 = j141 - (j158 << 21);
        long j161 = (1048576 + j144) >> 21;
        long j162 = 0 + j161;
        long j163 = j130 + (j162 * 666643);
        long j164 = j163 >> 21;
        long j165 = j148 + (j162 * 470296) + j164;
        long j166 = j163 - (j164 << 21);
        long j167 = j165 >> 21;
        long j168 = j147 + (j162 * 654183) + j167;
        long j169 = j165 - (j167 << 21);
        long j170 = j168 >> 21;
        long j171 = (j151 - (j162 * 997805)) + j170;
        long j172 = j168 - (j170 << 21);
        long j173 = j171 >> 21;
        long j174 = j150 + (j162 * 136657) + j173;
        long j175 = j171 - (j173 << 21);
        long j176 = j174 >> 21;
        long j177 = (j154 - (j162 * 683901)) + j176;
        long j178 = j174 - (j176 << 21);
        long j179 = j177 >> 21;
        long j180 = j153 + j179;
        long j181 = j177 - (j179 << 21);
        long j182 = j180 >> 21;
        long j183 = j157 + j182;
        long j184 = j180 - (j182 << 21);
        long j185 = j183 >> 21;
        long j186 = j156 + j185;
        long j187 = j183 - (j185 << 21);
        long j188 = j186 >> 21;
        long j189 = j160 + j188;
        long j190 = j186 - (j188 << 21);
        long j191 = j189 >> 21;
        long j192 = j159 + j191;
        long j193 = j189 - (j191 << 21);
        long j194 = j192 >> 21;
        long j195 = (j144 - (j161 << 21)) + j194;
        long j196 = j192 - (j194 << 21);
        long j197 = j195 >> 21;
        long j198 = 0 + j197;
        long j199 = j166 + (666643 * j198);
        long j200 = j181 - (j198 * 683901);
        long j201 = j199 >> 21;
        long j202 = j169 + (470296 * j198) + j201;
        long j203 = j199 - (j201 << 21);
        long j204 = j202 >> 21;
        long j205 = j172 + (654183 * j198) + j204;
        long j206 = j202 - (j204 << 21);
        long j207 = j205 >> 21;
        long j208 = (j175 - (997805 * j198)) + j207;
        long j209 = j205 - (j207 << 21);
        long j210 = j208 >> 21;
        long j211 = j178 + (136657 * j198) + j210;
        long j212 = j208 - (j210 << 21);
        long j213 = j211 >> 21;
        long j214 = j200 + j213;
        long j215 = j211 - (j213 << 21);
        long j216 = j214 >> 21;
        long j217 = j184 + j216;
        long j218 = j214 - (j216 << 21);
        long j219 = j217 >> 21;
        long j220 = j187 + j219;
        long j221 = j217 - (j219 << 21);
        long j222 = j220 >> 21;
        long j223 = j190 + j222;
        long j224 = j220 - (j222 << 21);
        long j225 = j223 >> 21;
        long j226 = j193 + j225;
        long j227 = j223 - (j225 << 21);
        long j228 = j226 >> 21;
        long j229 = j196 + j228;
        long j230 = j226 - (j228 << 21);
        long j231 = j229 >> 21;
        long j232 = (j195 - (j197 << 21)) + j231;
        long j233 = j229 - (j231 << 21);
        bArr13[0] = (byte) ((int) (j203 >> 0));
        BE6.A1B(j203, bArr13, 8, 1);
        bArr13[2] = BE6.A00(5, j206, j203 >> 16);
        bArr13[3] = (byte) ((int) (j206 >> 3));
        BE6.A1B(j206, bArr13, 11, 4);
        bArr13[5] = BE6.A00(2, j209, j206 >> 19);
        bArr13[6] = (byte) ((int) (j209 >> 6));
        bArr13[7] = BE6.A00(7, j212, j209 >> 14);
        bArr13[8] = (byte) ((int) (j212 >> 1));
        bArr13[9] = (byte) ((int) (j212 >> 9));
        bArr13[10] = BE6.A00(4, j215, j212 >> 17);
        bArr13[11] = (byte) ((int) (j215 >> 4));
        bArr13[12] = (byte) ((int) (j215 >> 12));
        bArr13[13] = BE6.A00(1, j218, j215 >> 20);
        bArr13[14] = (byte) ((int) (j218 >> 7));
        bArr13[15] = BE6.A00(6, j221, j218 >> 15);
        bArr13[16] = (byte) ((int) (j221 >> 2));
        bArr13[17] = (byte) ((int) (j221 >> 10));
        bArr13[18] = BE6.A00(3, j224, j221 >> 18);
        bArr13[19] = (byte) ((int) (j224 >> 5));
        bArr13[20] = (byte) ((int) (j224 >> 13));
        BE6.A1B(j227, bArr13, 0, 21);
        bArr13[22] = (byte) ((int) (j227 >> 8));
        bArr13[23] = BE6.A00(5, j230, j227 >> 16);
        bArr13[24] = (byte) ((int) (j230 >> 3));
        bArr13[25] = (byte) ((int) (j230 >> 11));
        bArr13[26] = BE6.A00(2, j233, j230 >> 19);
        bArr13[27] = (byte) ((int) (j233 >> 6));
        byte[] bArr14 = bArr13;
        BEB.A1U(bArr14, (int) ((j233 >> 14) | (j232 << 7)), j232);
        byte[] bArr15 = bArr7;
        System.arraycopy(bArr14, 0, bArr15, 32, 32);
        System.arraycopy(bArr15, 0, bArr4, 0, 64);
        byte b2 = (byte) (bArr4[63] & Byte.MAX_VALUE);
        bArr4[63] = b2;
        BE6.A1N(bArr4, b2, b, 63);
        return bArr4;
    }
}
